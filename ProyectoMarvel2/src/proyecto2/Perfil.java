/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto2;

import Logica.Cuentas;
import Logica.Usuario;
import javax.swing.*;

/**
 *
 * @author Nathan
 */
public class Perfil extends javax.swing.JFrame {

    private Cuentas sistemaCuentas;
    private Usuario usuarioActual;

    public Perfil() {
        initComponents();
    }

    public Perfil(Cuentas sistema, Usuario usuario) {
        this.sistemaCuentas = sistema;
        this.usuarioActual = usuario;
        initComponents();
        setTitle("MI PERFIL - " + usuario.getUsuario());
        setSize(800, 750);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        displayUserData();
        displayGameLogs();
    }

    private void displayUserData() {
        if (usuarioActual != null) {
            uactual.setText(usuarioActual.getUsuario());
            uactual.setEditable(false);
            puntosActual.setText(String.valueOf(usuarioActual.getPuntaje()));
            puntosActual.setEditable(false);
        }
    }

    private void displayGameLogs() {
        if (usuarioActual != null && usuarioActual.getIngresos() != null) {
            StringBuilder sb = new StringBuilder();
            if (usuarioActual.getnumIngresos() == 0) {
                sb.append("No hay partidas registradas aún.\n");
                sb.append("¡Ve al menú y juega una partida!");
            } else {
                sb.append("HISTORIAL DE PARTIDOS\n");
                sb.append("(Del más reciente al más antiguo)\n\n");
                for (int i = 0; i < usuarioActual.getnumIngresos(); i++) {
                    sb.append((i + 1)).append(". ");
                    sb.append(usuarioActual.getIngresos()[i].toString()).append("\n");
                }
            }
            registrosj.setText(sb.toString());
            registrosj.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        uactual = new javax.swing.JTextField();
        cambiarcontra = new javax.swing.JButton();
        eliminarc = new javax.swing.JButton();
        puntosActual = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        registrosj = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(0, 0, 51));
        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Usuario:");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 260, 100, 40);

        uactual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uactualActionPerformed(evt);
            }
        });
        getContentPane().add(uactual);
        uactual.setBounds(160, 260, 210, 40);

        cambiarcontra.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        cambiarcontra.setText("Cambiar Contraseña");
        cambiarcontra.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cambiarcontra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarcontraActionPerformed(evt);
            }
        });
        getContentPane().add(cambiarcontra);
        cambiarcontra.setBounds(60, 480, 290, 40);

        eliminarc.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        eliminarc.setText("Eliminar Cuenta");
        eliminarc.setActionCommand("");
        eliminarc.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        eliminarc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarcActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarc);
        eliminarc.setBounds(60, 530, 290, 40);

        puntosActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntosActualActionPerformed(evt);
            }
        });
        getContentPane().add(puntosActual);
        puntosActual.setBounds(150, 320, 120, 30);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("Puntos:");
        jLabel4.setOpaque(true);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 320, 90, 30);

        jLabel3.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        jLabel3.setText("Partidas");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(490, 220, 120, 13);
        getContentPane().add(registrosj);
        registrosj.setBounds(440, 210, 230, 490);

        jButton1.setFont(new java.awt.Font("Wide Latin", 1, 12)); // NOI18N
        jButton1.setText("Menú Juego");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(60, 590, 290, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/stra.png"))); // NOI18N
        jLabel2.setText("Eliminar Cuenta");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-130, 0, 880, 1024);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uactualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uactualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uactualActionPerformed

    private void cambiarcontraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarcontraActionPerformed
        cambiarPassword();
    }//GEN-LAST:event_cambiarcontraActionPerformed

    private void eliminarcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarcActionPerformed
        eliminarCuenta();
    }//GEN-LAST:event_eliminarcActionPerformed

    private void puntosActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntosActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosActualActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Juego().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cambiarPassword() {
        if (usuarioActual == null || sistemaCuentas == null) {
            JOptionPane.showMessageDialog(this, 
                "Error interno: datos de usuario no disponibles.", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String currentPassword = JOptionPane.showInputDialog(this, 
            "Para cambiar su contraseña, primero ingrese su contraseña actual:", 
            "Verificación de Seguridad", JOptionPane.QUESTION_MESSAGE);
        
        if (currentPassword == null || currentPassword.trim().isEmpty()) {
            return; 
        }

        if (!usuarioActual.confirmarcontra(currentPassword.trim())) {
            JOptionPane.showMessageDialog(this, 
                "La contraseña actual es incorrecta.\nIntente nuevamente.", 
                "Error de Contraseña", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String newPassword = JOptionPane.showInputDialog(this, 
            "Ingrese su nueva contraseña:\n(Debe tener exactamente 5 caracteres)", 
            "Nueva Contraseña", JOptionPane.QUESTION_MESSAGE);
        
        if (newPassword == null || newPassword.trim().isEmpty()) {
            return; 
        }

        newPassword = newPassword.trim();

        if (newPassword.length() != 5) {
            JOptionPane.showMessageDialog(this, 
                "La nueva contraseña debe tener exactamente 5 caracteres.\n" +
                "Longitud actual: " + newPassword.length() + " caracteres", 
                "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String confirmPassword = JOptionPane.showInputDialog(this, 
            "Confirme su nueva contraseña:", 
            "Confirmación", JOptionPane.QUESTION_MESSAGE);
        
        if (confirmPassword == null || confirmPassword.trim().isEmpty()) {
            return;
        }

        if (!newPassword.equals(confirmPassword.trim())) {
            JOptionPane.showMessageDialog(this, 
                "Las contraseñas no coinciden.\nIntente nuevamente.", 
                "Error de Confirmación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean resultado = sistemaCuentas.cambiarcontra(usuarioActual.getUsuario(), currentPassword.trim(), newPassword);
        
        if (resultado) {
            JOptionPane.showMessageDialog(this, 
                "¡Contraseña cambiada exitosamente!\n" +
                "Su nueva contraseña ha sido guardada.", 
                "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, 
                "Error al cambiar la contraseña.\nIntente nuevamente.", 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void eliminarCuenta() {
        if (usuarioActual == null || sistemaCuentas == null) {
            JOptionPane.showMessageDialog(this, 
                "Error interno: datos de usuario no disponibles.", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirmar eliminación
        int confirmacion = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro de que desea ELIMINAR su cuenta?\n\n" +
            "Esta acción NO se puede deshacer.\n" +
            "Se perderán todos sus datos y progreso.", 
            "CONFIRMACIÓN DE ELIMINACIÓN", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.WARNING_MESSAGE);

        if (confirmacion != JOptionPane.YES_OPTION) {
            return;
        }

        String password = JOptionPane.showInputDialog(this, 
            "Para confirmar la eliminación, ingrese su contraseña:", 
            "Verificación Final", JOptionPane.QUESTION_MESSAGE);
        
        if (password == null || password.trim().isEmpty()) {
            return;
        }

        if (!usuarioActual.confirmarcontra(password.trim())) {
            JOptionPane.showMessageDialog(this, 
                "Contraseña incorrecta.\nEliminación cancelada.", 
                "Error de Verificación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean resultado = sistemaCuentas.eliminarUsuario(usuarioActual.getUsuario(), password.trim());
        
        if (resultado) {
            JOptionPane.showMessageDialog(this, 
                "Su cuenta ha sido eliminada exitosamente.\n" +
                "Regresando al menú principal...", 
                "Cuenta Eliminada", JOptionPane.INFORMATION_MESSAGE);
            
            new Proyecto2_1(sistemaCuentas).setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, 
                "Error al eliminar la cuenta.\nIntente nuevamente.", 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Perfil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Perfil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cambiarcontra;
    private javax.swing.JButton eliminarc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField puntosActual;
    private javax.swing.JTextField registrosj;
    private javax.swing.JTextField uactual;
    // End of variables declaration//GEN-END:variables
}
